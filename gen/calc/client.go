// Code generated by goa v3.0.2, DO NOT EDIT.
//
// calc client
//
// Command:
// $ goa gen goa-ddb/design

package calc

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "calc" service client.
type Client struct {
	AddEndpoint       goa.Endpoint
	AddresumeEndpoint goa.Endpoint
	ListEndpoint      goa.Endpoint
}

// NewClient initializes a "calc" service client given the endpoints.
func NewClient(add, addresume, list goa.Endpoint) *Client {
	return &Client{
		AddEndpoint:       add,
		AddresumeEndpoint: addresume,
		ListEndpoint:      list,
	}
}

// Add calls the "add" endpoint of the "calc" service.
func (c *Client) Add(ctx context.Context, p *AddPayload) (res int, err error) {
	var ires interface{}
	ires, err = c.AddEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(int), nil
}

// Addresume calls the "addresume" endpoint of the "calc" service.
func (c *Client) Addresume(ctx context.Context, p []*Resume) (res []int, err error) {
	var ires interface{}
	ires, err = c.AddresumeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]int), nil
}

// List calls the "list" endpoint of the "calc" service.
func (c *Client) List(ctx context.Context) (res StoredResumeCollection, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(StoredResumeCollection), nil
}
